[{"path":"https://inlabru-org.github.io/dirinla/articles/my-vignette.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"","text":"vignette devoted explain use package dirinla. R-package fit Dirichlet regression models using R-INLA. can installed upgraded via repository https://github.com/inlabru-org/dirinla. manual, simulate data Dirichlet distribution posteriorly fit using main function package dirinla.","code":"library(dirinla) library(INLA) library(DirichletReg) library(ggplot2) library(gridExtra)"},{"path":"https://inlabru-org.github.io/dirinla/articles/my-vignette.html","id":"simulation","dir":"Articles","previous_headings":"","what":"Simulation","title":"","text":"firstly illustrate simulate 100 data points Dirichlet regression model three different categories one different covariate per category: \\[\\begin{align}   \\boldsymbol{Y}_n & \\sim  \\text{Dirichlet}(\\alpha_{1n}, \\ldots, \\alpha_{3n}) \\,, n = 1, \\ldots, 100, \\nonumber \\\\   \\log(\\alpha_{1n}) & =  \\beta_{01} + \\beta_{11} v_{1n}, \\nonumber \\\\   \\log(\\alpha_{2n}) & =  \\beta_{02} + \\beta_{12} v_{2n},  \\\\   \\log(\\alpha_{3n}) & =  \\beta_{03} + \\beta_{13} v_{3n}, \\nonumber  \\end{align}\\] parameters compose latent field \\(\\beta_{01}= -1.5\\), \\(\\beta_{02}=-2\\), \\(\\beta_{03}=0\\) (intercepts), \\(\\beta_{11}=1\\), \\(\\beta_{12}=2.3\\), \\(\\beta_{13}=-1.9\\) (slopes). Note covariates different category. particularized situation . simplicity, covariates simulated Uniform distribution (0,1). posteriorly fit model, following structure LGMs, Gaussian prior distributions assigned precision \\(10^{-4}\\) elements Gaussian field.","code":"### --- 2. Simulating from a Dirichlet likelihood --- #### set.seed(1000) N <- 100 #number of data V <- as.data.frame(matrix(runif((4) * N, 0, 1), ncol = 4)) #Covariates names(V) <- paste0('v', 1:4)  formula <- y ~ 1 + v1 | 1 + v2 | 1 + v3 (names_cat <- formula_list(formula))  intercepts <- x <- c(-1.5, 1, #Cat 1        -2, 2.3, #Cat 2        0 , -1.9) #Cat 3  mus <- exp(x) / sum(exp(x)) C <- length(names_cat) data_stack_construct <-   data_stack_dirich(y = as.vector(rep(NA, N * C)),                     covariates = names_cat,                     data       = V,                     d          = C,                     n          = N)  A_construct <- data_stack_construct A_construct[1:8, ]  eta <- A_construct %*% x alpha <- exp(eta) alpha <- matrix(alpha,                 ncol  = C,                 byrow = TRUE) y_o <- rdirichlet(N, alpha) colnames(y_o) <- paste0(\"y\", 1:C) head(y_o)"},{"path":"https://inlabru-org.github.io/dirinla/articles/my-vignette.html","id":"fitting-the-model","dir":"Articles","previous_headings":"","what":"Fitting the model","title":"","text":"next step call dirinlareg function order fit model data. just need specify formula, response variable, covariates precision Gaussian prior distribution parameters. collect information fitted values marginal posterior distributions parameters, can use methods summary plot directly dirinlaregmodel object generated.","code":"### --- 3. Fitting the model --- #### y <- y_o model.inla <- dirinlareg(   formula  = y ~ 1 + v1 | 1 + v2 | 1 + v3,   y        = y,   data.cov = V,   prec     = 0.0001,   verbose  = TRUE)"},{"path":"https://inlabru-org.github.io/dirinla/articles/my-vignette.html","id":"summary","dir":"Articles","previous_headings":"Fitting the model","what":"Summary","title":"","text":"","code":"summary(model.inla) #>  #> Call:  #>  dirinlareg(formula = y ~ 1 + v1 | 1 + v2 | 1 + v3, y = y, data.cov = V,  #>     prec = 1e-04, verbose = TRUE) #>  #>   #> ---- FIXED EFFECTS ----  #> =======================================================================  #> y1 #> -----------------------------------------------------------------------  #>             mean     sd 0.025quant 0.5quant 0.975quant   mode #> intercept -1.554 0.2014    -1.9490   -1.554     -1.159 -1.554 #> v1         1.018 0.3690     0.2948    1.018      1.741  1.018 #> =======================================================================  #> y2 #> -----------------------------------------------------------------------  #>             mean     sd 0.025quant 0.5quant 0.975quant   mode #> intercept -1.760 0.2329     -2.217   -1.760     -1.304 -1.760 #> v2         1.985 0.3971      1.206    1.985      2.763  1.985 #> =======================================================================  #> y3 #> -----------------------------------------------------------------------  #>               mean     sd 0.025quant 0.5quant 0.975quant     mode #> intercept -0.05926 0.2500    -0.5493 -0.05926     0.4307 -0.05926 #> v3        -1.94703 0.4158    -2.7619 -1.94703    -1.1322 -1.94703 #> =======================================================================  #>  #> ---- HYPERPARAMETERS ----  #>  #>  No hyperparameters in the model  #> =======================================================================  #> DIC = 1821.0258 , WAIC = 1711.0297 , LCPO = 913.8331  #> Number of observations: 100 #> Number of Categories: 3"},{"path":"https://inlabru-org.github.io/dirinla/articles/my-vignette.html","id":"plot-of-the-posterior-distributions","dir":"Articles","previous_headings":"Fitting the model","what":"Plot of the posterior distributions","title":"","text":"Posterior predictive distribution simplex. Points represent original data Posterior distributions parameters. Vertical line represents real value","code":""},{"path":"https://inlabru-org.github.io/dirinla/articles/my-vignette.html","id":"predictions","dir":"Articles","previous_headings":"","what":"Predictions","title":"","text":"package provides method predict compute posterior predictive distributions new individuals. show function works, predict value v1 = 0.2, v2 = 0.5, v3 = -0.1:","code":"### --- 5. Predicting for v1 = 0.25, v2 = 0.5, v3 = 0.5, v4 = 0.1 --- #### model.prediction <-   predict(model.inla,                   data.pred.cov = data.frame(v1 = 0.2 ,                                          v2 = 0.5,                                          v3 = -0.1)) #>  #>   #>  ---------------------- Predicting -----------------  #>   #>  model.prediction$summary_predictive_means #> $y1 #>            Min.   1st Qu.    Median     Mean   3rd Qu.     Max. #> [1,] 0.05081666 0.1148318 0.1372828 0.140574 0.1619587 0.329834 #>  #> $y2 #>            Min.   1st Qu.    Median     Mean   3rd Qu.      Max. #> [1,] 0.07885033 0.2030518 0.2470195 0.252963 0.2966276 0.5925873 #>  #> $y3 #>           Min.   1st Qu.    Median     Mean   3rd Qu.     Max. #> [1,] 0.3085923 0.5549314 0.6094129 0.606463 0.6599189 0.831211  ### --- 6. We can also predict directly --- #### model.inla <- dirinlareg(   formula  = y ~ 1 + v1 | 1 + v2 | 1 + v3,   y        = y,   data.cov = V,   prec     = 0.0001,   verbose  = FALSE,   prediction = TRUE,   data.pred.cov = data.frame(v1 = 0.2 ,                              v2 = 0.5,                              v3 = -0.1)) #>  #>   #>  ---------------------- Looking for the mode -----------------  #>   #>   #>  ----------------------    INLA call    -----------------  #>  #>  ---------------------- Obtaining linear predictor -----------------  #>  #>   #>  ---------------------- Predicting -----------------  #>   #>    model.prediction$summary_predictive_means #> $y1 #>            Min.   1st Qu.    Median     Mean   3rd Qu.     Max. #> [1,] 0.05081666 0.1148318 0.1372828 0.140574 0.1619587 0.329834 #>  #> $y2 #>            Min.   1st Qu.    Median     Mean   3rd Qu.      Max. #> [1,] 0.07885033 0.2030518 0.2470195 0.252963 0.2966276 0.5925873 #>  #> $y3 #>           Min.   1st Qu.    Median     Mean   3rd Qu.     Max. #> [1,] 0.3085923 0.5549314 0.6094129 0.606463 0.6599189 0.831211"},{"path":"https://inlabru-org.github.io/dirinla/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Joaquín Martínez-Minaya. Author, maintainer. Finn Lindgren. Author.","code":""},{"path":"https://inlabru-org.github.io/dirinla/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Joaquín Martínez-Minaya, Finn Lindgren (2022). dirinla: Hierarchical Bayesian Dirichlet regression models using Integrated Nested Laplace Approximation. R package version 1.0.0, https://inlabru-org.github.io/dirinla/.","code":"@Manual{,   title = {dirinla: Hierarchical Bayesian Dirichlet regression models using Integrated Nested Laplace Approximation},   author = {{Joaquín Martínez-Minaya} and {Finn Lindgren}},   year = {2022},   note = {R package version 1.0.0},   url = {https://inlabru-org.github.io/dirinla/}, }"},{"path":"https://inlabru-org.github.io/dirinla/index.html","id":"dirinla","dir":"","previous_headings":"","what":"Hierarchical Bayesian Dirichlet regression models using Integrated Nested Laplace Approximation","title":"Hierarchical Bayesian Dirichlet regression models using Integrated Nested Laplace Approximation","text":"goal dirinla analyze compositional data Dirichlet regression using integrated nested Laplace approximation via R-INLA package.","code":""},{"path":"https://inlabru-org.github.io/dirinla/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Hierarchical Bayesian Dirichlet regression models using Integrated Nested Laplace Approximation","text":"yet CRAN, can install latest bugfix release dirinla github : can install development version dirinla github : track development version builds via inlabru-org.r-universe.dev:","code":"# install.packages(\"remotes\") remotes::install_github(\"inlabru-org/dirinla\", ref=\"master\") # install.packages(\"remotes\") remotes::install_github(\"inlabru-org/dirinla\", ref=\"devel\") # Enable universe(s) by inlabru-org options(repos = c(   inlabruorg = 'https://inlabru-org.r-universe.dev',   INLA = 'https://inla.r-inla-download.org/R/testing',   CRAN = 'https://cloud.r-project.org'))  # Install the package install.packages('dirinla')"},{"path":"https://inlabru-org.github.io/dirinla/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Hierarchical Bayesian Dirichlet regression models using Integrated Nested Laplace Approximation","text":"basic example shows solve common problem:","code":""},{"path":"https://inlabru-org.github.io/dirinla/index.html","id":"loading-libraries","dir":"","previous_headings":"Example","what":"Loading libraries","title":"Hierarchical Bayesian Dirichlet regression models using Integrated Nested Laplace Approximation","text":"","code":"library(dirinla) #> Registered S3 methods overwritten by 'ggtern': #>   method           from    #>   grid.draw.ggplot ggplot2 #>   plot.ggplot      ggplot2 #>   print.ggplot     ggplot2 library(INLA) #> Loading required package: Matrix #> Loading required package: foreach #> Loading required package: parallel #> Loading required package: sp #> This is INLA_22.09.02 built 2022-09-02 19:28:51 UTC. #>  - See www.r-inla.org/contact-us for how to get help. #>  - To enable PARDISO sparse library; see inla.pardiso() library(DirichletReg) #> Loading required package: Formula"},{"path":"https://inlabru-org.github.io/dirinla/index.html","id":"simulating-from-a-dirichlet-likelihood","dir":"","previous_headings":"Example","what":"Simulating from a Dirichlet likelihood","title":"Hierarchical Bayesian Dirichlet regression models using Integrated Nested Laplace Approximation","text":"","code":"set.seed(1000) N <- 50 #number of data V <- as.data.frame(matrix(runif((4) * N, 0, 1), ncol = 4)) #Covariates names(V) <- paste0('v', 1:4)  formula <- y ~ 1 + v1 | 1 + v2 | 1 + v3 | 1 + v4 (names_cat <- formula_list(formula)) #> $`category 1` #> [1] \"intercept\" \"v1\"        #>  #> $`category 2` #> [1] \"intercept\" \"v2\"        #>  #> $`category 3` #> [1] \"intercept\" \"v3\"        #>  #> $`category 4` #> [1] \"intercept\" \"v4\"  x <- c(-1.5, 1, -3, 1.5,        2, -3 , -1, 5)  mus <- exp(x) / sum(exp(x)) C <- length(names_cat) A_construct <-   data_stack_dirich(y = as.vector(rep(NA, N * C)),                     covariates = names_cat,                     data       = V,                     d          = C,                     n          = N)  A_construct[1:8, ] #> 8 x 8 sparse Matrix of class \"dgCMatrix\" #>                                                      #> [1,] 1 0.3278787 . .         . .         . .         #> [2,] . .         1 0.7267993 . .         . .         #> [3,] . .         . .         1 0.5993679 . .         #> [4,] . .         . .         . .         1 0.3224284 #> [5,] 1 0.7588465 . .         . .         . .         #> [6,] . .         1 0.6820559 . .         . .         #> [7,] . .         . .         1 0.4516818 . .         #> [8,] . .         . .         . .         1 0.5613199  eta <- A_construct %*% x alpha <- exp(eta) alpha <- matrix(alpha,                 ncol  = C,                 byrow = TRUE) y_o <- rdirichlet(N, alpha) colnames(y_o) <- paste0(\"y\", 1:C) head(y_o) #>                y1           y2          y3        y4 #> [1,] 1.139109e-04 2.413110e-01 0.345644051 0.4129310 #> [2,] 7.342592e-02 3.633687e-03 0.193128806 0.7298116 #> [3,] 2.079875e-02 4.007038e-05 0.323599848 0.6555613 #> [4,] 1.361278e-05 3.894290e-02 0.172308411 0.7887351 #> [5,] 2.339991e-02 4.035880e-03 0.055003377 0.9175608 #> [6,] 8.910796e-01 6.743970e-10 0.000663061 0.1082573"},{"path":"https://inlabru-org.github.io/dirinla/index.html","id":"fitting-a-simple-model","dir":"","previous_headings":"Example","what":"Fitting a simple model","title":"Hierarchical Bayesian Dirichlet regression models using Integrated Nested Laplace Approximation","text":"","code":"y <- y_o model.inla <- dirinlareg(   formula  = y ~ 1 + v1 | 1 + v2 | 1 + v3 | 1 + v4,   y        = y,   data.cov = V,   prec     = 0.0001,   verbose  = TRUE) #>  #>   #>  ---------------------- Looking for the mode -----------------  #>   #>  #> as(<dtCMatrix>, \"dgCMatrix\") is deprecated since Matrix 1.4-2; do as(., \"generalMatrix\") instead #> Iter = 1, |grad| = 824.56, log.post = -457.73, |x_new - x_old| = 13.92583, |f_new - f_old| = 368.13749 #> Iter = 2, |grad| = 136.74, log.post = -577.55, |x_new - x_old| = 3.65634, |f_new - f_old| = 119.82746 #> Iter = 3, |grad| = 120.98, log.post = -671.77, |x_new - x_old| = 3.31293, |f_new - f_old| = 94.22001 #> Iter = 4, |grad| = 96.8, log.post = -739.43, |x_new - x_old| = 2.81732, |f_new - f_old| = 67.65798 #> Iter = 5, |grad| = 70.76, log.post = -785.42, |x_new - x_old| = 2.1453, |f_new - f_old| = 45.99234 #> Iter = 6, |grad| = 48.13, log.post = -809.29, |x_new - x_old| = 1.3377, |f_new - f_old| = 23.86892 #> Iter = 7, |grad| = 24.92, log.post = -814.96, |x_new - x_old| = 0.55663, |f_new - f_old| = 5.67249 #> Iter = 8, |grad| = 5.97, log.post = -815.24, |x_new - x_old| = 0.10262, |f_new - f_old| = 0.27719 #> Iter = 9, |grad| = 0.3, log.post = -815.24, |x_new - x_old| = 0.00994, |f_new - f_old| = 0.00062 #> Iter = 10, |grad| = 0, log.post = -815.24, |x_new - x_old| = 0.00011, |f_new - f_old| = 0 #> Iter = 11, |grad| = 0, log.post = -815.24, |x_new - x_old| = 0, |f_new - f_old| = 0 #>  #> Great news! The mode has been properly located! #>   #> Real Hessian has been used 10 times  #> Expected Hessian has been used 40 times  #>  #>  ----------------------    INLA call    -----------------  #> INLA-Iter = 1, fixed.effects = 8, hyperparameters = 0 ---> PASS #>  #>  ---------------------- Obtaining linear predictor -----------------  summary(model.inla) #>  #> Call:  #>  dirinlareg(formula = y ~ 1 + v1 | 1 + v2 | 1 + v3 | 1 + v4, y = y,  #>     data.cov = V, prec = 1e-04, verbose = TRUE) #>  #>   #> ---- FIXED EFFECTS ----  #> =======================================================================  #> y1 #> -----------------------------------------------------------------------  #>              mean     sd 0.025quant 0.5quant 0.975quant    mode #> intercept -1.5293 0.2922    -2.1020  -1.5293    -0.9565 -1.5293 #> v1         0.9977 0.5146    -0.0108   0.9977     2.0063  0.9977 #> =======================================================================  #> y2 #> -----------------------------------------------------------------------  #>              mean     sd 0.025quant 0.5quant 0.975quant    mode #> intercept -2.8538 0.2783    -3.3993  -2.8538     -2.308 -2.8538 #> v2         0.7187 0.4870    -0.2357   0.7187      1.673  0.7187 #> =======================================================================  #> y3 #> -----------------------------------------------------------------------  #>             mean     sd 0.025quant 0.5quant 0.975quant   mode #> intercept  1.902 0.2448      1.422    1.902      2.382  1.902 #> v3        -3.045 0.3738     -3.777   -3.045     -2.312 -3.045 #> =======================================================================  #> y4 #> -----------------------------------------------------------------------  #>              mean     sd 0.025quant 0.5quant 0.975quant    mode #> intercept -0.7033 0.3145     -1.320  -0.7033   -0.08698 -0.7033 #> v4         4.5247 0.4313      3.679   4.5247    5.37012  4.5247 #> =======================================================================  #>  #> ---- HYPERPARAMETERS ----  #>  #>  No hyperparameters in the model  #> =======================================================================  #> DIC = 1555.1536 , WAIC = 1039.5914 , LCPO = 779.5894  #> Number of observations: 50 #> Number of Categories: 4"},{"path":"https://inlabru-org.github.io/dirinla/index.html","id":"predicting-for-v1--025-v2--05-v3--05-v4--01","dir":"","previous_headings":"Example","what":"Predicting for v1 = 0.25, v2 = 0.5, v3 = 0.5, v4 = 0.1","title":"Hierarchical Bayesian Dirichlet regression models using Integrated Nested Laplace Approximation","text":"","code":"model.prediction <-   predict(model.inla,                   data.pred = data.frame(v1 = 0.25,                                          v2 = 0.5,                                          v3 = 0.5,                                          v4 = 0.1)) #>  #>   #>  ---------------------- Predicting -----------------  #>   #>  model.prediction$summary_predictive_means #> $y1 #>            Min.    1st Qu.    Median     Mean   3rd Qu.     Max. #> [1,] 0.02366362 0.08237956 0.1045064 0.110114 0.1321715 0.306817 #>  #> $y2 #>             Min.    1st Qu.     Median       Mean    3rd Qu.      Max. #> [1,] 0.005978445 0.02318953 0.03082928 0.03341511 0.04057715 0.1574298 #>  #> $y3 #>           Min.   1st Qu.    Median      Mean   3rd Qu.    Max. #> [1,] 0.2386448 0.4920715 0.5580837 0.5553907 0.6213676 0.86177 #>  #> $y4 #>            Min.   1st Qu.    Median      Mean   3rd Qu.     Max. #> [1,] 0.08145196 0.2404386 0.2950362 0.3010802 0.3541526 0.626968"},{"path":"https://inlabru-org.github.io/dirinla/reference/H0_matrix_eta1.html","id":null,"dir":"Reference","previous_headings":"","what":"Computing expected Hessian for a vector eta — H0_matrix_eta1","title":"Computing expected Hessian for a vector eta — H0_matrix_eta1","text":"`H0_matrix_eta_1` computes expected Hessian eta -loglikelihood `H0_matrix_eta_1` computes expected Hessian eta -loglikelihood","code":""},{"path":"https://inlabru-org.github.io/dirinla/reference/H0_matrix_eta1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computing expected Hessian for a vector eta — H0_matrix_eta1","text":"","code":"H0_matrix_eta1(eta, d)  H0_matrix_eta1(eta, d)"},{"path":"https://inlabru-org.github.io/dirinla/reference/H0_matrix_eta1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computing expected Hessian for a vector eta — H0_matrix_eta1","text":"eta eta vector compute expected Hessian. d Dimension","code":""},{"path":"https://inlabru-org.github.io/dirinla/reference/H0_matrix_eta1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computing expected Hessian for a vector eta — H0_matrix_eta1","text":"Expected Hessian eta. Expected Hessian eta.","code":""},{"path":"https://inlabru-org.github.io/dirinla/reference/H0_matrix_eta1.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Computing expected Hessian for a vector eta — H0_matrix_eta1","text":"Joaquín Martínez-Minaya <jomarminaya@gmail.com> Joaquín Martínez-Minaya <jomarminaya@gmail.com>","code":""},{"path":"https://inlabru-org.github.io/dirinla/reference/H0_matrix_eta_x.html","id":null,"dir":"Reference","previous_headings":"","what":"Computing expected Hessian in eta — H0_matrix_eta_x","title":"Computing expected Hessian in eta — H0_matrix_eta_x","text":"`H0_matrix_eta_x` computes expected Hessian eta -loglikelihood `H0_matrix_eta_x` computes expected Hessian eta -loglikelihood","code":""},{"path":"https://inlabru-org.github.io/dirinla/reference/H0_matrix_eta_x.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computing expected Hessian in eta — H0_matrix_eta_x","text":"","code":"H0_matrix_eta_x(eta, d, cores)  H0_matrix_eta_x(eta, d, cores)"},{"path":"https://inlabru-org.github.io/dirinla/reference/H0_matrix_eta_x.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computing expected Hessian in eta — H0_matrix_eta_x","text":"eta Linear predictor resulting product Ax. d Dimension. cores Number cores parallel computation. package parallel used.","code":""},{"path":"https://inlabru-org.github.io/dirinla/reference/H0_matrix_eta_x.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computing expected Hessian in eta — H0_matrix_eta_x","text":"Expected Hessian eta. Expected Hessian eta.","code":""},{"path":"https://inlabru-org.github.io/dirinla/reference/H0_matrix_eta_x.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Computing expected Hessian in eta — H0_matrix_eta_x","text":"Joaquín Martínez-Minaya <jomarminaya@gmail.com> Joaquín Martínez-Minaya <jomarminaya@gmail.com>","code":""},{"path":"https://inlabru-org.github.io/dirinla/reference/H_matrix_eta_diag.html","id":null,"dir":"Reference","previous_headings":"","what":"Computing additional diagonal part for the real Hessian H = H0 + diag — H_matrix_eta_diag","title":"Computing additional diagonal part for the real Hessian H = H0 + diag — H_matrix_eta_diag","text":"`H_matrix_eta_diag` computes expected Hessian eta -loglikelihood","code":""},{"path":"https://inlabru-org.github.io/dirinla/reference/H_matrix_eta_diag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computing additional diagonal part for the real Hessian H = H0 + diag — H_matrix_eta_diag","text":"","code":"H_matrix_eta_diag(eta, d, y)"},{"path":"https://inlabru-org.github.io/dirinla/reference/H_matrix_eta_diag.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computing additional diagonal part for the real Hessian H = H0 + diag — H_matrix_eta_diag","text":"eta eta vector compute expected Hessian. d Dimension y Data corresponding -individual","code":""},{"path":"https://inlabru-org.github.io/dirinla/reference/H_matrix_eta_diag.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computing additional diagonal part for the real Hessian H = H0 + diag — H_matrix_eta_diag","text":"Elements diagonal  H = H0 + diag","code":""},{"path":"https://inlabru-org.github.io/dirinla/reference/H_matrix_eta_diag.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Computing additional diagonal part for the real Hessian H = H0 + diag — H_matrix_eta_diag","text":"Joaquín Martínez-Minaya <jomarminaya@gmail.com>","code":""},{"path":"https://inlabru-org.github.io/dirinla/reference/bdiag_m.html","id":null,"dir":"Reference","previous_headings":"","what":"Fast version of Matrix :: .bdiag() -- for the case of *many*  (k x k) matrices:\nCopyright (C) 2016 Martin Maechler, ETH Zurich — bdiag_m","title":"Fast version of Matrix :: .bdiag() -- for the case of *many*  (k x k) matrices:\nCopyright (C) 2016 Martin Maechler, ETH Zurich — bdiag_m","text":"Fast version Matrix :: .bdiag() -- case *many*  (k x k) matrices: Copyright (C) 2016 Martin Maechler, ETH Zurich","code":""},{"path":"https://inlabru-org.github.io/dirinla/reference/bdiag_m.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fast version of Matrix :: .bdiag() -- for the case of *many*  (k x k) matrices:\nCopyright (C) 2016 Martin Maechler, ETH Zurich — bdiag_m","text":"","code":"bdiag_m(lmat)"},{"path":"https://inlabru-org.github.io/dirinla/reference/bdiag_m.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fast version of Matrix :: .bdiag() -- for the case of *many*  (k x k) matrices:\nCopyright (C) 2016 Martin Maechler, ETH Zurich — bdiag_m","text":"lmat list(<mat1>, <mat2>, ....., <mat_N>)  mat_j  k x k 'matrix'","code":""},{"path":"https://inlabru-org.github.io/dirinla/reference/bdiag_m.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fast version of Matrix :: .bdiag() -- for the case of *many*  (k x k) matrices:\nCopyright (C) 2016 Martin Maechler, ETH Zurich — bdiag_m","text":"sparse (N*k x N*k) matrix class  \"dgCMatrix\".","code":""},{"path":"https://inlabru-org.github.io/dirinla/reference/data_stack_dirich.html","id":null,"dir":"Reference","previous_headings":"","what":"Preparing the data — data_stack_dirich","title":"Preparing the data — data_stack_dirich","text":"`data_stack_dirich` prepares data using inla.stack package INLA.","code":""},{"path":"https://inlabru-org.github.io/dirinla/reference/data_stack_dirich.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preparing the data — data_stack_dirich","text":"","code":"data_stack_dirich(y, covariates, share = NULL, data, d, n)"},{"path":"https://inlabru-org.github.io/dirinla/reference/data_stack_dirich.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preparing the data — data_stack_dirich","text":"y Response variable matrix format. covariates String name covariates. share Covariates share cateogries. TODO data Data.frame contains covariates. d Number categories. n Number locations.","code":""},{"path":"https://inlabru-org.github.io/dirinla/reference/data_stack_dirich.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preparing the data — data_stack_dirich","text":"Matrix eta = ","code":""},{"path":"https://inlabru-org.github.io/dirinla/reference/data_stack_dirich.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Preparing the data — data_stack_dirich","text":"Joaquín Martínez-Minaya <jomarminaya@gmail.com>","code":""},{"path":"https://inlabru-org.github.io/dirinla/reference/data_stack_dirich.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Preparing the data — data_stack_dirich","text":"","code":"n <- 100 d <- 4  V <- matrix(rnorm(4*n, 0, 1), ncol=4) V <- as.data.frame(V) names(V) <- c('v1', 'v2', 'v3', 'v4' )  covariates <- names(V)   formula <- y ~ 1 + v1 + v2 | 1 + v1 | 1 + v1  names_cat <- formula_list(formula)  data_stack_construct <- data_stack_dirich(y          = as.vector(rep(NA, n*d)),                                           covariates = names_cat,                                           share      = NULL,                                           data       = V,                                           d          = d,                                           n          = n )"},{"path":"https://inlabru-org.github.io/dirinla/reference/data_stack_dirich_formula.html","id":null,"dir":"Reference","previous_headings":"","what":"Preparing the data — data_stack_dirich_formula","title":"Preparing the data — data_stack_dirich_formula","text":"`data_stack_dirich_formula` prepares data using inla.stack package INLA.","code":""},{"path":"https://inlabru-org.github.io/dirinla/reference/data_stack_dirich_formula.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preparing the data — data_stack_dirich_formula","text":"","code":"data_stack_dirich_formula(y, covariates, share = NULL, data, d, n)"},{"path":"https://inlabru-org.github.io/dirinla/reference/data_stack_dirich_formula.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preparing the data — data_stack_dirich_formula","text":"y Response variable matrix format. covariates String name covariates. share Covariates share cateogries. implemented yet. data Data.frame contains covariates. d Number categories. n Number locations.","code":""},{"path":"https://inlabru-org.github.io/dirinla/reference/data_stack_dirich_formula.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preparing the data — data_stack_dirich_formula","text":"List two objects - Object class inla.stack - Object class formula","code":""},{"path":"https://inlabru-org.github.io/dirinla/reference/data_stack_dirich_formula.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Preparing the data — data_stack_dirich_formula","text":"Joaquín Martínez-Minaya <joaquin.martinez-minaya@uv.es>","code":""},{"path":"https://inlabru-org.github.io/dirinla/reference/data_stack_dirich_formula.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Preparing the data — data_stack_dirich_formula","text":"","code":"n <- 100 d <- 4  V <- matrix(rnorm(4*n, 0, 1), ncol=4) V <- as.data.frame(V) names(V) <- c('v1', 'v2', 'v3', 'v4' )  covariates <- names(V)   formula <- y ~ 1 + v1 + v2 | 1 + v1 | 1 + v1  names_cat <- formula_list(formula)  data_stack_construct <- data_stack_dirich(y          = as.vector(rep(NA, n*d)),                                           covariates = names_cat,                                           share      = NULL,                                           data       = V,                                           d          = d,                                           n          = n )"},{"path":"https://inlabru-org.github.io/dirinla/reference/digamma_red.html","id":null,"dir":"Reference","previous_headings":"","what":"Computing the function digamma — digamma_red","title":"Computing the function digamma — digamma_red","text":"`digamma_red` function digamma appropiate really small values","code":""},{"path":"https://inlabru-org.github.io/dirinla/reference/digamma_red.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computing the function digamma — digamma_red","text":"","code":"digamma_red(x, ...)"},{"path":"https://inlabru-org.github.io/dirinla/reference/digamma_red.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computing the function digamma — digamma_red","text":"x Argument applied function digamma. ... Rest arguments used case digamma functions.","code":""},{"path":"https://inlabru-org.github.io/dirinla/reference/digamma_red.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computing the function digamma — digamma_red","text":"Result applying digamma function","code":""},{"path":"https://inlabru-org.github.io/dirinla/reference/digamma_red.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Computing the function digamma — digamma_red","text":"Joaquín Martínez-Minaya <joaquin.martinez-minaya@uv.es>","code":""},{"path":"https://inlabru-org.github.io/dirinla/reference/dirichlet_log_pos_x.html","id":null,"dir":"Reference","previous_headings":"","what":"Dirichlet log posterior function — dirichlet_log_pos_x","title":"Dirichlet log posterior function — dirichlet_log_pos_x","text":"`dirichlet_log_pos_x` returns -log posterior Dirichlet distribution asumming multivariate normal prior precision matrix Qx elements latent field.","code":""},{"path":"https://inlabru-org.github.io/dirinla/reference/dirichlet_log_pos_x.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dirichlet log posterior function — dirichlet_log_pos_x","text":"","code":"dirichlet_log_pos_x(A = A, x, Qx = Qx, y)"},{"path":"https://inlabru-org.github.io/dirinla/reference/dirichlet_log_pos_x.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dirichlet log posterior function — dirichlet_log_pos_x","text":"matrix links eta latent field, .e., eta = x. x Vector elements latent field, .e., eta = x. Qx Precision matrix priors latent field. y Vector response variable.","code":""},{"path":"https://inlabru-org.github.io/dirinla/reference/dirichlet_log_pos_x.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dirichlet log posterior function — dirichlet_log_pos_x","text":"real value showing -log posterior density returned","code":""},{"path":"https://inlabru-org.github.io/dirinla/reference/dirichlet_log_pos_x.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Dirichlet log posterior function — dirichlet_log_pos_x","text":"Joaquín Martínez-Minaya <jomarminaya@gmail.com>","code":""},{"path":"https://inlabru-org.github.io/dirinla/reference/dirinlareg.html","id":null,"dir":"Reference","previous_headings":"","what":"Fitting a Dirichlet regression — dirinlareg","title":"Fitting a Dirichlet regression — dirinlareg","text":"`dirinlareg` Main function Dirichlet Regression","code":""},{"path":"https://inlabru-org.github.io/dirinla/reference/dirinlareg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fitting a Dirichlet regression — dirinlareg","text":"","code":"dirinlareg(   formula,   y,   data.cov,   share = NULL,   x0 = NULL,   tol0 = 1e-05,   tol1 = 0.1,   k0 = 20,   k1 = 5,   a = 0.5,   strategy = \"ls-quasi-newton\",   prec = prec,   verbose = FALSE,   cores = 1,   sim = 1000,   prediction = FALSE,   data.pred.cov = NULL,   ... )"},{"path":"https://inlabru-org.github.io/dirinla/reference/dirinlareg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fitting a Dirichlet regression — dirinlareg","text":"formula object class formula indicating response variable covariates Dirichlet regression y matrix containing response variable R^nxd, n number individuals d number categories data.cov data.frame covarites, covariates! share parameters fitted jointly. x0 initial optimization value tol0 tolerance tol1 tolerance gradient |grad| < tol1 * max(1, |f|) k0 number iterations k1 number iterations including calling inla step length optimization algorithm strategy strategy use optimize prec precision prior fixed effects verbose TRUE computing process shown. Default FALSE cores Number cores parallel computation. package parallel used. sim Simulations call inla.posterior.sample extract linear predictor, alphas mus. bigger , better approximation, computational time. prediction TRUE predict new values covariates given data.pred.cov. data.pred.cov data.frame values covariates want predict. ... arguments inla command","code":""},{"path":"https://inlabru-org.github.io/dirinla/reference/dirinlareg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fitting a Dirichlet regression — dirinlareg","text":"model dirinlaregmodel object","code":""},{"path":"https://inlabru-org.github.io/dirinla/reference/dirinlareg.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Fitting a Dirichlet regression — dirinlareg","text":"Joaquín Martínez-Minaya <joaquin.martinez-minaya@uv.es>","code":""},{"path":"https://inlabru-org.github.io/dirinla/reference/dirinlareg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fitting a Dirichlet regression — dirinlareg","text":"","code":"#' ### In this example, we show how to fit a model using the dirinla package ### ### --- 1. Loading the libraries --- #### library(INLA) #> Loading required package: Matrix #> Loading required package: foreach #> Loading required package: parallel #> Loading required package: sp #> This is INLA_22.09.02 built 2022-09-02 19:28:51 UTC. #>  - See www.r-inla.org/contact-us for how to get help. #>  - To enable PARDISO sparse library; see inla.pardiso() library(DirichletReg) #> Loading required package: Formula   ### --- 2. Simulating from a Dirichlet likelihood --- #### set.seed(1000) N <- 50 #number of data V <- as.data.frame(matrix(runif((4) * N, 0, 1), ncol = 4)) #Covariates names(V) <- paste0('v', 1:4)  formula <- y ~ 1 + v1 | 1 + v2 | 1 + v3 | 1 + v4 (names_cat <- formula_list(formula)) #> $`category 1` #> [1] \"intercept\" \"v1\"        #>  #> $`category 2` #> [1] \"intercept\" \"v2\"        #>  #> $`category 3` #> [1] \"intercept\" \"v3\"        #>  #> $`category 4` #> [1] \"intercept\" \"v4\"        #>   x <- c(-1.5, 1, -3, 1.5,        2, -3 , -1, 5)  mus <- exp(x) / sum(exp(x)) C <- length(names_cat) data_stack_construct <-   data_stack_dirich(y = as.vector(rep(NA, N * C)),                     covariates = names_cat,                     data       = V,                     d          = C,                     n          = N)  A_construct <- data_stack_construct A_construct[1:8, ] #> 8 x 8 sparse Matrix of class \"dgCMatrix\" #>                                                      #> [1,] 1 0.3278787 . .         . .         . .         #> [2,] . .         1 0.7267993 . .         . .         #> [3,] . .         . .         1 0.5993679 . .         #> [4,] . .         . .         . .         1 0.3224284 #> [5,] 1 0.7588465 . .         . .         . .         #> [6,] . .         1 0.6820559 . .         . .         #> [7,] . .         . .         1 0.4516818 . .         #> [8,] . .         . .         . .         1 0.5613199  eta <- A_construct %*% x alpha <- exp(eta) alpha <- matrix(alpha,                 ncol  = C,                 byrow = TRUE) y_o <- rdirichlet(N, alpha) colnames(y_o) <- paste0(\"y\", 1:C) head(y_o) #>                y1           y2          y3        y4 #> [1,] 1.139109e-04 2.413110e-01 0.345644051 0.4129310 #> [2,] 7.342592e-02 3.633687e-03 0.193128806 0.7298116 #> [3,] 2.079875e-02 4.007038e-05 0.323599848 0.6555613 #> [4,] 1.361278e-05 3.894290e-02 0.172308411 0.7887351 #> [5,] 2.339991e-02 4.035880e-03 0.055003377 0.9175608 #> [6,] 8.910796e-01 6.743970e-10 0.000663061 0.1082573   ### --- 3. Fitting the model --- #### y <- y_o model.inla <- dirinlareg(   formula  = y ~ 1 + v1 | 1 + v2 | 1 + v3 | 1 + v4,   y        = y,   data.cov = V,   prec     = 0.0001,   verbose  = FALSE) #>  #>   #>  ---------------------- Looking for the mode -----------------  #>   #>   #>  ----------------------    INLA call    -----------------  #>  #>  ---------------------- Obtaining linear predictor -----------------    summary(model.inla) #>  #> Call:  #>  dirinlareg(formula = y ~ 1 + v1 | 1 + v2 | 1 + v3 | 1 + v4, y = y,  #>     data.cov = V, prec = 1e-04, verbose = FALSE) #>  #>   #> ---- FIXED EFFECTS ----  #> =======================================================================  #> y1 #> -----------------------------------------------------------------------  #>              mean     sd 0.025quant 0.5quant 0.975quant    mode #> intercept -1.5293 0.2922    -2.1020  -1.5293    -0.9565 -1.5293 #> v1         0.9977 0.5146    -0.0108   0.9977     2.0063  0.9977 #> =======================================================================  #> y2 #> -----------------------------------------------------------------------  #>              mean     sd 0.025quant 0.5quant 0.975quant    mode #> intercept -2.8538 0.2783    -3.3993  -2.8538     -2.308 -2.8538 #> v2         0.7187 0.4870    -0.2357   0.7187      1.673  0.7187 #> =======================================================================  #> y3 #> -----------------------------------------------------------------------  #>             mean     sd 0.025quant 0.5quant 0.975quant   mode #> intercept  1.902 0.2448      1.422    1.902      2.382  1.902 #> v3        -3.045 0.3738     -3.777   -3.045     -2.312 -3.045 #> =======================================================================  #> y4 #> -----------------------------------------------------------------------  #>              mean     sd 0.025quant 0.5quant 0.975quant    mode #> intercept -0.7033 0.3145     -1.320  -0.7033   -0.08698 -0.7033 #> v4         4.5247 0.4313      3.679   4.5247    5.37012  4.5247 #> =======================================================================  #>  #> ---- HYPERPARAMETERS ----  #>  #>  No hyperparameters in the model  #> =======================================================================  #> DIC = 1555.1536 , WAIC = 1039.5914 , LCPO = 779.5894  #> Number of observations: 50 #> Number of Categories: 4"},{"path":"https://inlabru-org.github.io/dirinla/reference/dirinlaregmodel.html","id":null,"dir":"Reference","previous_headings":"","what":"Defining a new class — dirinlaregmodel","title":"Defining a new class — dirinlaregmodel","text":"`dirinlaregmodel` new object class","code":""},{"path":"https://inlabru-org.github.io/dirinla/reference/dirinlaregmodel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Defining a new class — dirinlaregmodel","text":"","code":"dirinlaregmodel(   call = NULL,   formula = NULL,   summary_fixed = NULL,   marginals_fixed = NULL,   summary_random = NULL,   marginals_random = NULL,   summary_hyperpar = NULL,   marginals_hyperpar = NULL,   summary_linear_predictor = NULL,   marginals_linear_predictor = NULL,   summary_alphas = NULL,   marginals_alphas = NULL,   summary_precision = NULL,   marginals_precision = NULL,   summary_means = NULL,   marginals_means = NULL,   summary_predictive_alphas = NULL,   marginals_predictive_alphas = NULL,   summary_predictive_means = NULL,   marginals_predictive_means = NULL,   summary_predictive_precision = NULL,   marginals_predictive_precision = NULL,   dic = NULL,   waic = NULL,   cpo = NULL,   nobs = NULL,   ncat = NULL,   y = NULL,   data.cov = NULL )"},{"path":"https://inlabru-org.github.io/dirinla/reference/dirinlaregmodel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Defining a new class — dirinlaregmodel","text":"call call function dirinlareg. formula Formula introduced user. summary_fixed List containing summary marginal posterior distributions fixed effects. marginals_fixed List containing marginal posterior distributions fixed effects. summary_random List containing summary marginal posterior distributions random effects. marginals_random List containing marginal posterior distributions random effects. summary_hyperpar List containing summary marginal posterior distributions hyperparameters. marginals_hyperpar List containing marginal posterior distributions hyperparameters. summary_linear_predictor List containing summary marginal posterior distributions linear predictor. marginals_linear_predictor List containing marginal posterior distributions linear predictor. summary_alphas List containing summary marginal posterior distributions alphas. marginals_alphas List containing marginal posterior distributions alphas. summary_precision List containing summary marginal posterior distributions precision. marginals_precision List containing marginal posterior distributions precision. summary_means List containing summary marginal posterior distributions means. marginals_means List containing marginal posterior distributions means. summary_predictive_alphas List containing summary  marginal posterior predictive distribution alphas. marginals_predictive_alphas List containing marginal posterior predictive distribution alphas. summary_predictive_means List containing summary fo marginal posterior predictive distribution means. marginals_predictive_means List containing marginal posterior predictive distribution means. summary_predictive_precision List containing summary marginal posterior predictive distribution precision. marginals_predictive_precision List containing marginal posterior predictive distribution precision. dic List containing inla output dic. waic List containing inla output waic. cpo List containing inla output cpo. nobs Number observations. ncat Number categories. y matrix containing response variable R^nxd, n number individuals d number categories data.cov data.frame covarites, covariates!","code":""},{"path":"https://inlabru-org.github.io/dirinla/reference/dirinlaregmodel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Defining a new class — dirinlaregmodel","text":"object list dirinlaregmodel class.","code":""},{"path":"https://inlabru-org.github.io/dirinla/reference/extract_fixed.html","id":null,"dir":"Reference","previous_headings":"","what":"Extracting marginals fixed of an inla object — extract_fixed","title":"Extracting marginals fixed of an inla object — extract_fixed","text":"`extract_fixed` function extract summary marginals distribution corresponding fixed effects","code":""},{"path":"https://inlabru-org.github.io/dirinla/reference/extract_fixed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extracting marginals fixed of an inla object — extract_fixed","text":"","code":"extract_fixed(inla_model, names_cat)"},{"path":"https://inlabru-org.github.io/dirinla/reference/extract_fixed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extracting marginals fixed of an inla object — extract_fixed","text":"inla_model Object inla class. names_cat List generated extract_formula.","code":""},{"path":"https://inlabru-org.github.io/dirinla/reference/extract_fixed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extracting marginals fixed of an inla object — extract_fixed","text":"summary_fixed Summary fixed effects category. marginals_fixed Marginals parameter estimated.","code":""},{"path":"https://inlabru-org.github.io/dirinla/reference/extract_fixed.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extracting marginals fixed of an inla object — extract_fixed","text":"Joaquín Martínez-Minaya <joaquin.martinez-minaya@uv.es>","code":""},{"path":"https://inlabru-org.github.io/dirinla/reference/extract_linear_predictor.html","id":null,"dir":"Reference","previous_headings":"","what":"Extracting posterior distributions from the linear predictor — extract_linear_predictor","title":"Extracting posterior distributions from the linear predictor — extract_linear_predictor","text":"`extract_linear_predictor` extracts posterior distribution linear predictor","code":""},{"path":"https://inlabru-org.github.io/dirinla/reference/extract_linear_predictor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extracting posterior distributions from the linear predictor — extract_linear_predictor","text":"","code":"extract_linear_predictor(   inla_model,   n,   d,   Lk_eta,   names_cat = names_cat,   sim,   verbose,   cores )"},{"path":"https://inlabru-org.github.io/dirinla/reference/extract_linear_predictor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extracting posterior distributions from the linear predictor — extract_linear_predictor","text":"inla_model object class inla. n Number observations. d Number categories. Lk_eta Cholesky decomposition Hessian matrix. names_cat List generated extract_formula. sim simulations function inla.posterior.sample verbose TRUE computing process shown. Default FALSE cores number cores used computations","code":""},{"path":"https://inlabru-org.github.io/dirinla/reference/extract_linear_predictor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extracting posterior distributions from the linear predictor — extract_linear_predictor","text":"summary_linear_predictor List containing summary marginal posterior distributions linear predictor. marginals_linear_predictor List containing simulations marginal posterior distributions linear predictor. summary_alphas List containing summary marginal posterior distributions alphas. marginals_alphas List containing simulations marginal posterior distributions alphas. summary_precision List containing summary marginal posterior distributions precision. marginals_precision List containing simulations marginal posterior distributions precision. summary_means List containing summary marginal posterior distributions means. marginals_means List containing simulations marginal posterior distributions means.","code":""},{"path":"https://inlabru-org.github.io/dirinla/reference/extract_linear_predictor.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extracting posterior distributions from the linear predictor — extract_linear_predictor","text":"Joaquín Martínez-Minaya <jomarminaya@gmail.com>","code":""},{"path":"https://inlabru-org.github.io/dirinla/reference/formula_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Formula in to list — formula_list","title":"Formula in to list — formula_list","text":"`formula_list` reads formula generates list name covariates used category","code":""},{"path":"https://inlabru-org.github.io/dirinla/reference/formula_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Formula in to list — formula_list","text":"","code":"formula_list(form, y = NULL)"},{"path":"https://inlabru-org.github.io/dirinla/reference/formula_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Formula in to list — formula_list","text":"form Object class formula. y Matrix containing response variable R^nxd, n number individuals d number categories.","code":""},{"path":"https://inlabru-org.github.io/dirinla/reference/formula_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Formula in to list — formula_list","text":"list names variables used category.","code":""},{"path":"https://inlabru-org.github.io/dirinla/reference/formula_list.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Formula in to list — formula_list","text":"Joaquín Martínez-Minaya <jomarminaya@gmail.com>","code":""},{"path":"https://inlabru-org.github.io/dirinla/reference/formula_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Formula in to list — formula_list","text":"","code":"formula <- y ~ 1 + v1 + v2 | -1 + v1 | 0 + v2 formula_list(formula) #> $`category 1` #> [1] \"intercept\" \"v1\"        \"v2\"        #>  #> $`category 2` #> [1] \"v1\" #>  #> $`category 3` #> [1] \"v2\" #>"},{"path":"https://inlabru-org.github.io/dirinla/reference/g0_vector_eta_1.html","id":null,"dir":"Reference","previous_headings":"","what":"Computing gradient vector in eta — g0_vector_eta_1","title":"Computing gradient vector in eta — g0_vector_eta_1","text":"`g0_vector_eta` computes gradient -loglikelihood","code":""},{"path":"https://inlabru-org.github.io/dirinla/reference/g0_vector_eta_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computing gradient vector in eta — g0_vector_eta_1","text":"","code":"g0_vector_eta_1(A = A, x, y)"},{"path":"https://inlabru-org.github.io/dirinla/reference/g0_vector_eta_1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computing gradient vector in eta — g0_vector_eta_1","text":"Matrix links eta latent field, .e., eta = x. x Vector elements latent field, .e., eta = x. y Vector response variable.","code":""},{"path":"https://inlabru-org.github.io/dirinla/reference/g0_vector_eta_1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computing gradient vector in eta — g0_vector_eta_1","text":"numeric vector gradient eta.","code":""},{"path":"https://inlabru-org.github.io/dirinla/reference/g0_vector_eta_1.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Computing gradient vector in eta — g0_vector_eta_1","text":"Joaquín Martínez-Minaya <joaquin.martinez-minaya@uv.es>","code":""},{"path":"https://inlabru-org.github.io/dirinla/reference/log_beta_mult_eta.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculating the log beta function in eta — log_beta_mult_eta","title":"Calculating the log beta function in eta — log_beta_mult_eta","text":"`beta_mult_eta` computes log beta function eta","code":""},{"path":"https://inlabru-org.github.io/dirinla/reference/log_beta_mult_eta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculating the log beta function in eta — log_beta_mult_eta","text":"","code":"log_beta_mult_eta(x)"},{"path":"https://inlabru-org.github.io/dirinla/reference/log_beta_mult_eta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculating the log beta function in eta — log_beta_mult_eta","text":"x Vector elements.","code":""},{"path":"https://inlabru-org.github.io/dirinla/reference/log_beta_mult_eta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculating the log beta function in eta — log_beta_mult_eta","text":"Numeric value.","code":""},{"path":"https://inlabru-org.github.io/dirinla/reference/log_beta_mult_eta.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculating the log beta function in eta — log_beta_mult_eta","text":"Joaquín Martínez-Minaya <joaquin.martinez-minaya@uv.es>","code":""},{"path":"https://inlabru-org.github.io/dirinla/reference/look_for_mode_x.html","id":null,"dir":"Reference","previous_headings":"","what":"Finding the mode of the full posterior distribution — look_for_mode_x","title":"Finding the mode of the full posterior distribution — look_for_mode_x","text":"`look_for_mode_x` computes optimization algorithms find mode posterior","code":""},{"path":"https://inlabru-org.github.io/dirinla/reference/look_for_mode_x.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Finding the mode of the full posterior distribution — look_for_mode_x","text":"","code":"look_for_mode_x(   A = A,   x0,   tol0,   tol1,   k0,   a = 0.5,   y,   d,   n,   strategy = \"ls-quasi-newton\",   Qx,   verbose,   cores )"},{"path":"https://inlabru-org.github.io/dirinla/reference/look_for_mode_x.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Finding the mode of the full posterior distribution — look_for_mode_x","text":"Matrix links latent field linear predictor. x0 Initial optimization value. tol0 Tolerance |x_new - x_old| |f_new - f_old|. tol1 Tolerance gradient |grad| < tol1 * max(1, |f|) k0 Number iterations. Step length algorithm. y Response variable. Number columns correspond number categories. d Number categories. n Number individuals. strategy Strategy use optimize. Qx Prior precision matrix fixed effects. verbose default FALSE. TRUE, computation process shown scream. cores Number cores parallel computation. package parallel used.","code":""},{"path":"https://inlabru-org.github.io/dirinla/reference/look_for_mode_x.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Finding the mode of the full posterior distribution — look_for_mode_x","text":"x_hat Matrix x iterations. Hk Hessian eta. Hessian combination real Hessian (positive definite) expected Hessian (real Hessian positive definite). gk Gradient eta. Lk Cholesky decomposition matrix. eta Linear predictor. z New pseudo observation conditioned eta.","code":""},{"path":"https://inlabru-org.github.io/dirinla/reference/look_for_mode_x.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Finding the mode of the full posterior distribution — look_for_mode_x","text":"Joaquín Martínez-Minaya <joaquin.martinez-minaya@uv.es>","code":""},{"path":"https://inlabru-org.github.io/dirinla/reference/newton_x.html","id":null,"dir":"Reference","previous_headings":"","what":"Newton-Raphson algorithm — newton_x","title":"Newton-Raphson algorithm — newton_x","text":"`newton_x` computes optimization algorithms find mode posterior. Line search strategy Armijo conditions implemented","code":""},{"path":"https://inlabru-org.github.io/dirinla/reference/newton_x.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Newton-Raphson algorithm — newton_x","text":"","code":"newton_x(A, x_hat, gk, Hk, a, Qx, strategy, y, d = d)"},{"path":"https://inlabru-org.github.io/dirinla/reference/newton_x.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Newton-Raphson algorithm — newton_x","text":"Matrix links eta latent field, .e., eta = x x_hat Vector elements latent field, .e., eta_hat = x_hat gk Gradient eta. Hk Hessian eta. Step length. Qx Precision matrix prior latent field. strategy Strategy use optimize. Now, line search strategy quasi-newton algorithm one avaliable. y Vector response variable d Number categories.","code":""},{"path":"https://inlabru-org.github.io/dirinla/reference/newton_x.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Newton-Raphson algorithm — newton_x","text":"g0 : Gradient x_hat_new. numeric vector gradient x_hat_new. x_hat_new: New value x apply one iteration.","code":""},{"path":"https://inlabru-org.github.io/dirinla/reference/newton_x.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Newton-Raphson algorithm — newton_x","text":"Joaquín Martínez-Minaya <joaquin.martinez-minaya@uv.es>","code":""},{"path":"https://inlabru-org.github.io/dirinla/reference/plot.dirinlaregmodel.html","id":null,"dir":"Reference","previous_headings":"","what":"plot of dirinlaregmodel xs — plot.dirinlaregmodel","title":"plot of dirinlaregmodel xs — plot.dirinlaregmodel","text":"`plot.dirinlaregmodel` Method plots dirinlaregmodel x","code":""},{"path":"https://inlabru-org.github.io/dirinla/reference/plot.dirinlaregmodel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot of dirinlaregmodel xs — plot.dirinlaregmodel","text":"","code":"# S3 method for dirinlaregmodel plot(x, ...)"},{"path":"https://inlabru-org.github.io/dirinla/reference/plot.dirinlaregmodel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot of dirinlaregmodel xs — plot.dirinlaregmodel","text":"x Object class dirinlaregmodel. ... arguments.","code":""},{"path":"https://inlabru-org.github.io/dirinla/reference/plot.dirinlaregmodel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot of dirinlaregmodel xs — plot.dirinlaregmodel","text":"Plotting posterior fixed effects.","code":""},{"path":"https://inlabru-org.github.io/dirinla/reference/plot.dirinlaregmodel.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"plot of dirinlaregmodel xs — plot.dirinlaregmodel","text":"Joaquín Martínez-Minaya <jomarminaya@gmail.com>","code":""},{"path":"https://inlabru-org.github.io/dirinla/reference/predict.dirinlaregmodel.html","id":null,"dir":"Reference","previous_headings":"","what":"Finding the mode of the full posterior distribution — predict.dirinlaregmodel","title":"Finding the mode of the full posterior distribution — predict.dirinlaregmodel","text":"`predict.dirinlaregmodel` computes posterior predictive distribution given values covariates","code":""},{"path":"https://inlabru-org.github.io/dirinla/reference/predict.dirinlaregmodel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Finding the mode of the full posterior distribution — predict.dirinlaregmodel","text":"","code":"# S3 method for dirinlaregmodel predict(object, data.pred.cov, ...)"},{"path":"https://inlabru-org.github.io/dirinla/reference/predict.dirinlaregmodel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Finding the mode of the full posterior distribution — predict.dirinlaregmodel","text":"object dirinlaregmodel object. data.pred.cov Data.frame covariate values variables predict. ... arguments.","code":""},{"path":"https://inlabru-org.github.io/dirinla/reference/predict.dirinlaregmodel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Finding the mode of the full posterior distribution — predict.dirinlaregmodel","text":"model dirinlaregmodel object","code":""},{"path":"https://inlabru-org.github.io/dirinla/reference/predict.dirinlaregmodel.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Finding the mode of the full posterior distribution — predict.dirinlaregmodel","text":"Joaquín Martínez-Minaya <jomarminaya@gmail.com>","code":""},{"path":"https://inlabru-org.github.io/dirinla/reference/predict.dirinlaregmodel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Finding the mode of the full posterior distribution — predict.dirinlaregmodel","text":"","code":"### In this example, we show how to fit a model using the dirinla package ### ### --- 1. Loading the libraries --- #### library(INLA) library(DirichletReg)   ### --- 2. Simulating from a Dirichlet likelihood --- #### set.seed(1000) N <- 50 #number of data V <- as.data.frame(matrix(runif((4) * N, 0, 1), ncol = 4)) #Covariates names(V) <- paste0('v', 1:4)  formula <- y ~ 1 + v1 | 1 + v2 | 1 + v3 | 1 + v4 (names_cat <- formula_list(formula)) #> $`category 1` #> [1] \"intercept\" \"v1\"        #>  #> $`category 2` #> [1] \"intercept\" \"v2\"        #>  #> $`category 3` #> [1] \"intercept\" \"v3\"        #>  #> $`category 4` #> [1] \"intercept\" \"v4\"        #>   x <- c(-1.5, 1, -3, 1.5,        2, -3 , -1, 5)  mus <- exp(x) / sum(exp(x)) C <- length(names_cat) data_stack_construct <-   data_stack_dirich(y = as.vector(rep(NA, N * C)),                     covariates = names_cat,                     data       = V,                     d          = C,                     n          = N)  A_construct <- data_stack_construct A_construct[1:8, ] #> 8 x 8 sparse Matrix of class \"dgCMatrix\" #>                                                      #> [1,] 1 0.3278787 . .         . .         . .         #> [2,] . .         1 0.7267993 . .         . .         #> [3,] . .         . .         1 0.5993679 . .         #> [4,] . .         . .         . .         1 0.3224284 #> [5,] 1 0.7588465 . .         . .         . .         #> [6,] . .         1 0.6820559 . .         . .         #> [7,] . .         . .         1 0.4516818 . .         #> [8,] . .         . .         . .         1 0.5613199  eta <- A_construct %*% x alpha <- exp(eta) alpha <- matrix(alpha,                 ncol  = C,                 byrow = TRUE) y_o <- rdirichlet(N, alpha) colnames(y_o) <- paste0(\"y\", 1:C) head(y_o) #>                y1           y2          y3        y4 #> [1,] 1.139109e-04 2.413110e-01 0.345644051 0.4129310 #> [2,] 7.342592e-02 3.633687e-03 0.193128806 0.7298116 #> [3,] 2.079875e-02 4.007038e-05 0.323599848 0.6555613 #> [4,] 1.361278e-05 3.894290e-02 0.172308411 0.7887351 #> [5,] 2.339991e-02 4.035880e-03 0.055003377 0.9175608 #> [6,] 8.910796e-01 6.743970e-10 0.000663061 0.1082573   ### --- 3. Fitting the model --- #### y <- y_o model.inla <- dirinlareg(   formula  = y ~ 1 + v1 | 1 + v2 | 1 + v3 | 1 + v4,   y        = y,   data.cov = V,   prec     = 0.0001,   verbose  = FALSE) #>  #>   #>  ---------------------- Looking for the mode -----------------  #>   #>   #>  ----------------------    INLA call    -----------------  #>  #>  ---------------------- Obtaining linear predictor -----------------    summary(model.inla) #>  #> Call:  #>  dirinlareg(formula = y ~ 1 + v1 | 1 + v2 | 1 + v3 | 1 + v4, y = y,  #>     data.cov = V, prec = 1e-04, verbose = FALSE) #>  #>   #> ---- FIXED EFFECTS ----  #> =======================================================================  #> y1 #> -----------------------------------------------------------------------  #>              mean     sd 0.025quant 0.5quant 0.975quant    mode #> intercept -1.5293 0.2922    -2.1020  -1.5293    -0.9565 -1.5293 #> v1         0.9977 0.5146    -0.0108   0.9977     2.0063  0.9977 #> =======================================================================  #> y2 #> -----------------------------------------------------------------------  #>              mean     sd 0.025quant 0.5quant 0.975quant    mode #> intercept -2.8538 0.2783    -3.3993  -2.8538     -2.308 -2.8538 #> v2         0.7187 0.4870    -0.2357   0.7187      1.673  0.7187 #> =======================================================================  #> y3 #> -----------------------------------------------------------------------  #>             mean     sd 0.025quant 0.5quant 0.975quant   mode #> intercept  1.902 0.2448      1.422    1.902      2.382  1.902 #> v3        -3.045 0.3738     -3.777   -3.045     -2.312 -3.045 #> =======================================================================  #> y4 #> -----------------------------------------------------------------------  #>              mean     sd 0.025quant 0.5quant 0.975quant    mode #> intercept -0.7033 0.3145     -1.320  -0.7033   -0.08698 -0.7033 #> v4         4.5247 0.4313      3.679   4.5247    5.37012  4.5247 #> =======================================================================  #>  #> ---- HYPERPARAMETERS ----  #>  #>  No hyperparameters in the model  #> =======================================================================  #> DIC = 1555.1536 , WAIC = 1039.5914 , LCPO = 779.5894  #> Number of observations: 50 #> Number of Categories: 4 ### --- 4. Predicting for v1 = 0.25, v2 = 0.5, v3 = 0.5, v4 = 0.1 --- #### model.prediction <- predict(model.inla,                 data.pred.cov= data.frame(v1 = 0.25,                                        v2 = 0.5,                                        v3 = 0.5,                                        v4 = 0.1)) #>  #>   #>  ---------------------- Predicting -----------------  #>   #>   model.prediction$summary_predictive_means #> $y1 #>            Min.    1st Qu.    Median     Mean   3rd Qu.     Max. #> [1,] 0.02366362 0.08237956 0.1045064 0.110114 0.1321715 0.306817 #>  #> $y2 #>             Min.    1st Qu.     Median       Mean    3rd Qu.      Max. #> [1,] 0.005978445 0.02318953 0.03082928 0.03341511 0.04057715 0.1574298 #>  #> $y3 #>           Min.   1st Qu.    Median      Mean   3rd Qu.    Max. #> [1,] 0.2386448 0.4920715 0.5580837 0.5553907 0.6213676 0.86177 #>  #> $y4 #>            Min.   1st Qu.    Median      Mean   3rd Qu.     Max. #> [1,] 0.08145196 0.2404386 0.2950362 0.3010802 0.3541526 0.626968 #>"},{"path":"https://inlabru-org.github.io/dirinla/reference/summary.dirinlaregmodel.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary of dirinlaregmodel objects — summary.dirinlaregmodel","title":"Summary of dirinlaregmodel objects — summary.dirinlaregmodel","text":"`summary.dirinlaregmodel` function gives summary dirinlaregmodel object","code":""},{"path":"https://inlabru-org.github.io/dirinla/reference/summary.dirinlaregmodel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary of dirinlaregmodel objects — summary.dirinlaregmodel","text":"","code":"# S3 method for dirinlaregmodel summary(object, ...)"},{"path":"https://inlabru-org.github.io/dirinla/reference/summary.dirinlaregmodel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary of dirinlaregmodel objects — summary.dirinlaregmodel","text":"object Object class dirinlaregmodel. ... arguments.","code":""},{"path":"https://inlabru-org.github.io/dirinla/reference/summary.dirinlaregmodel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary of dirinlaregmodel objects — summary.dirinlaregmodel","text":"Print summary.","code":""},{"path":"https://inlabru-org.github.io/dirinla/reference/summary.dirinlaregmodel.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Summary of dirinlaregmodel objects — summary.dirinlaregmodel","text":"Joaquín Martínez-Minaya <jomarminaya@gmail.com>","code":""},{"path":"https://inlabru-org.github.io/dirinla/reference/summary_fast.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary using the packages Rfast and Rfast2 of a matrix by rows — summary_fast","title":"Summary using the packages Rfast and Rfast2 of a matrix by rows — summary_fast","text":"`summary_fast` summarise matrix rows","code":""},{"path":"https://inlabru-org.github.io/dirinla/reference/summary_fast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary using the packages Rfast and Rfast2 of a matrix by rows — summary_fast","text":"","code":"summary_fast(A)"},{"path":"https://inlabru-org.github.io/dirinla/reference/summary_fast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary using the packages Rfast and Rfast2 of a matrix by rows — summary_fast","text":"matrix summarised","code":""},{"path":"https://inlabru-org.github.io/dirinla/reference/summary_fast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary using the packages Rfast and Rfast2 of a matrix by rows — summary_fast","text":"matrix whose columns \"mean\", \"sd\", \"0.025quant\", \"0.5quant\", \"0.975quant\"","code":""},{"path":"https://inlabru-org.github.io/dirinla/reference/summary_fast.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Summary using the packages Rfast and Rfast2 of a matrix by rows — summary_fast","text":"Joaquín Martínez-Minaya <jomarminaya@gmail.com>","code":""},{"path":"https://inlabru-org.github.io/dirinla/reference/summary_fast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary using the packages Rfast and Rfast2 of a matrix by rows — summary_fast","text":"","code":"A <- matrix(rnorm(10000), ncol = 1000) summary_fast(A) #>               mean        sd 0.025quant     0.5quant 0.975quant #>  [1,]  0.013108184 1.0062404  -2.002622 -0.001465075   1.973815 #>  [2,]  0.003143620 1.0205353  -2.009972 -0.010447364   1.966246 #>  [3,]  0.051275621 0.9941869  -1.913460  0.020207700   2.003292 #>  [4,] -0.016560338 0.9787443  -1.850709 -0.048469556   1.980771 #>  [5,]  0.009411664 0.9822465  -1.964708  0.027081914   1.967175 #>  [6,]  0.006417088 0.9976152  -1.980148  0.019095005   1.889267 #>  [7,] -0.093690829 1.0496351  -2.134188 -0.100875943   1.953789 #>  [8,] -0.035570989 1.0088903  -2.030266 -0.072650489   1.989333 #>  [9,]  0.048454981 1.0074131  -1.903222  0.079628160   2.070165 #> [10,] -0.030142629 0.9589138  -1.837382 -0.064265753   1.878572"},{"path":"https://inlabru-org.github.io/dirinla/reference/trigamma_red.html","id":null,"dir":"Reference","previous_headings":"","what":"Computing the function trigamma — trigamma_red","title":"Computing the function trigamma — trigamma_red","text":"`trigamma_red` function trigamma appropiate really small values","code":""},{"path":"https://inlabru-org.github.io/dirinla/reference/trigamma_red.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computing the function trigamma — trigamma_red","text":"","code":"trigamma_red(x, ...)"},{"path":"https://inlabru-org.github.io/dirinla/reference/trigamma_red.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computing the function trigamma — trigamma_red","text":"x Argument applied function trigamma. ... Rest arguments used case digamma functions.","code":""},{"path":"https://inlabru-org.github.io/dirinla/reference/trigamma_red.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computing the function trigamma — trigamma_red","text":"Result applying trigamma function.","code":""},{"path":"https://inlabru-org.github.io/dirinla/reference/trigamma_red.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Computing the function trigamma — trigamma_red","text":"Joaquín Martínez-Minaya <joaquin.martinez-minaya@uv.es>","code":""}]
